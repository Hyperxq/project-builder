Object.defineProperty(exports,"__esModule",{value:!0}),exports.main=void 0;const e=require("tslib"),n=require("@angular-devkit/schematics");require("@paralleldrive/cuid2");const t=e.__importDefault(require("ajv")),r=e.__importDefault(require("../../config/config-schema.json")),a=require("@angular-devkit/schematics/tasks");exports.main=function(e){return async(i,o)=>{const{dryRun:s,packageManager:c,filePath:l,remoteFile:u,installCollections:d}=e,p=await async function(e,t=!1,r){if(t){const n=await fetch(e);return await n.json()}{const t=r.read(e);if(!t)throw new n.SchematicsException(`Could not find ${e}.`);return JSON.parse(t.toString())}}(l,u,i),f=await async function(e){try{const n=(new t.default).compile(r.default);return!!n(JSON.parse(JSON.stringify(e,null,2)))||(console.log("Validation errors:",n.errors),!1)}catch(e){return console.error("Error during validation:",e),!1}}(p);if(!f)return i;const{projects:g,collections:m,...k}=p,h=[];d&&h.push(function(e,n,t,r=!0){const i=Object.entries(n),o=i.map((([e,n])=>{const{version:t}=n;return{packageName:e,version:t}}));return e.addTask(new a.RunSchematicTask("installCollections",{packages:o,packageManager:t,dryRun:r}))}(o,m,c)),d&&function(e,n,t,r,i=!0){const o=Object.entries(n),s=o.filter((([e,n])=>{const{keepInstalled:t}=n;return!t})).map((([e,n])=>e));e.addTask(new a.RunSchematicTask("uninstallCollections",{packageNames:s,packageManager:t,dryRun:i}),r)}(o,m,c,h)}};
